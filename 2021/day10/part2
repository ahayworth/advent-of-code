#!/usr/bin/env ruby

OPENERS = ['(', '[', '{', '<']
CLOSERS = [')', ']', '}', '>']

scores = []
File.read(ARGV[0] || "input").lines.map(&:chomp).each do |line|
  stack = []
  invalid = false
  line.each_char do |c|
    if OPENERS.include?(c)
      stack << c
    elsif CLOSERS.include?(c)
      expected_closer = CLOSERS[OPENERS.index(stack.pop)]
      invalid = (c != expected_closer)
      break if invalid
    end
  end

  unless invalid
    score = 0

    completion = stack.reverse.map { |c| CLOSERS[OPENERS.index(c)] }
    completion.each do |c|
      score *= 5
      score += case c
      when ')'
        1
      when ']'
        2
      when '}'
        3
      when '>'
        4
      end
    end

    scores << score
  end
end

puts scores.sort[scores.size / 2]
